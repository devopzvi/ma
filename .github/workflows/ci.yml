name: ci-build

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'run-ci')"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install dependencies & check packages vulnerabilities
      run: |
        cd node-hello
        npm install
    # - name: Run tests
    #   run: npm test
    - name: 'create SHORT_SHA env var- for versioning'
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
    - name: docker steps
      run: |            
        docker login ghcr.io/devopzvi -u="${{ env.GHCR_USER }}" -p="${{ secrets.GHCR_TOKEN }}"
        docker build -t ghcr.io/${GITHUB_REPOSITORY}-node-hello:${SHORT_SHA} ./
        docker tag ghcr.io/${GITHUB_REPOSITORY}-node-hello:${SHORT_SHA} ghcr.io/${GITHUB_REPOSITORY}-node-hello:latest
        docker push ghcr.io/${GITHUB_REPOSITORY}-node-hello:${SHORT_SHA}
        docker push ghcr.io/${GITHUB_REPOSITORY}-node-hello:latest
  helm:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: lint-package-push
      run: |
        cd helm
        helm lint .
        [[ $? = 1 ]] && exit 1
        helm package .
        tgz_file=$(find . -type f -name "*.tgz")
        helm registry login ghcr.io -u="${{ env.GHCR_USER }}" -p="${{ secrets.GHCR_TOKEN }}"
        helm push "$tgz_file" oci://ghcr.io/devopzvi/helm-charts

        if [ $? -eq 0 ]; then
          echo "Helm chart pushed successfully."
        else
          echo "Failed to push the Helm chart."
        fi
